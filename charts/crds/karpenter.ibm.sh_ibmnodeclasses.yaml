---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: ibmnodeclasses.karpenter.ibm.sh
spec:
  group: karpenter.ibm.sh
  names:
    kind: IBMNodeClass
    listKind: IBMNodeClassList
    plural: ibmnodeclasses
    singular: ibmnodeclass
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IBMNodeClass is the Schema for the IBMNodeClass API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of IBMNodeClass
            properties:
              apiServerEndpoint:
                description: |-
                  APIServerEndpoint is the Kubernetes API server endpoint for node registration
                  If specified, this endpoint will be used instead of automatic discovery
                  This is useful when the control plane is not accessible via standard discovery methods
                  Example: "https://10.243.65.4:6443"
                pattern: ^https://[a-zA-Z0-9.-]+:[0-9]+$
                type: string
              bootstrapMode:
                default: auto
                description: |-
                  BootstrapMode determines how nodes should be bootstrapped to join the cluster
                  Valid values are:
                  - "cloud-init" - Use cloud-init scripts to bootstrap nodes (default)
                  - "iks-api" - Use IKS Worker Pool API to add nodes to cluster
                  - "auto" - Automatically select the best method based on cluster type
                enum:
                - cloud-init
                - iks-api
                - auto
                type: string
              iksClusterID:
                description: |-
                  IKSClusterID is the IKS cluster ID for API-based bootstrapping
                  Required when BootstrapMode is "iks-api"
                pattern: ^[a-z0-9]+$
                type: string
              iksWorkerPoolID:
                description: |-
                  IKSWorkerPoolID is the worker pool ID to add nodes to
                  Used with IKS API bootstrapping mode
                type: string
              image:
                description: Image is the ID of the image to use for nodes
                minLength: 1
                type: string
              instanceProfile:
                description: |-
                  InstanceProfile is the name of the instance profile to use
                  If not specified, instance types will be automatically selected based on requirements
                  Either InstanceProfile or InstanceRequirements must be specified
                minLength: 1
                pattern: ^[a-z0-9]+-[0-9]+x[0-9]+$
                type: string
              instanceRequirements:
                description: |-
                  InstanceRequirements defines requirements for automatic instance type selection
                  Only used when InstanceProfile is not specified
                  Either InstanceProfile or InstanceRequirements must be specified
                properties:
                  architecture:
                    description: |-
                      Architecture specifies the CPU architecture
                      Valid values: "amd64", "arm64"
                    enum:
                    - amd64
                    - arm64
                    type: string
                  maximumHourlyPrice:
                    description: MaximumHourlyPrice specifies the maximum hourly price
                      in USD as a decimal string (e.g. "0.50")
                    pattern: ^\\d+\\.?\\d*$
                    type: string
                  minimumCPU:
                    description: MinimumCPU specifies the minimum number of CPUs required
                    format: int32
                    minimum: 1
                    type: integer
                  minimumMemory:
                    description: MinimumMemory specifies the minimum amount of memory
                      in GiB
                    format: int32
                    minimum: 1
                    type: integer
                type: object
              placementStrategy:
                description: |-
                  PlacementStrategy defines how nodes should be placed across zones and subnets
                  Only used when Zone or Subnet is not specified
                properties:
                  subnetSelection:
                    description: SubnetSelection defines criteria for automatic subnet
                      selection
                    properties:
                      minimumAvailableIPs:
                        description: MinimumAvailableIPs is the minimum number of
                          available IPs a subnet must have
                        format: int32
                        minimum: 1
                        type: integer
                      requiredTags:
                        additionalProperties:
                          type: string
                        description: Tags that subnets must have to be considered
                          for selection
                        type: object
                    type: object
                  zoneBalance:
                    default: Balanced
                    description: |-
                      ZoneBalance determines how nodes are distributed across zones
                      Valid values are:
                      - "Balanced" (default) - Nodes are evenly distributed across zones
                      - "AvailabilityFirst" - Prioritize zone availability over even distribution
                      - "CostOptimized" - Consider both cost and availability when selecting zones
                    enum:
                    - Balanced
                    - AvailabilityFirst
                    - CostOptimized
                    type: string
                type: object
              placementTarget:
                description: PlacementTarget is the ID of the placement target (dedicated
                  host, placement group)
                type: string
              region:
                description: Region is the IBM Cloud region where nodes will be created
                minLength: 1
                pattern: ^[a-z]{2}-[a-z]+$
                type: string
              resourceGroup:
                description: ResourceGroup is the ID of the resource group for the
                  instance
                type: string
              securityGroups:
                description: |-
                  SecurityGroups is a list of security group IDs to attach to nodes
                  At least one security group must be specified for VPC instance creation
                items:
                  type: string
                minItems: 1
                type: array
              sshKeys:
                description: SSHKeys is a list of SSH key names to add to the instance
                items:
                  type: string
                type: array
              subnet:
                description: |-
                  Subnet is the ID of the subnet where nodes will be created
                  If not specified, subnets will be automatically selected based on placement strategy
                type: string
              tags:
                additionalProperties:
                  type: string
                description: Tags to apply to the instances
                type: object
              userData:
                description: UserData contains user data script to run on instance
                  initialization
                type: string
              vpc:
                description: VPC is the ID of the VPC where nodes will be created
                minLength: 1
                type: string
              zone:
                description: |-
                  Zone is the availability zone where nodes will be created
                  If not specified, zones will be automatically selected based on placement strategy
                pattern: ^[a-z]{2}-[a-z]+-[0-9]+$
                type: string
            required:
            - image
            - region
            - securityGroups
            - vpc
            type: object
            x-kubernetes-validations:
            - message: either instanceProfile or instanceRequirements must be specified
              rule: has(self.instanceProfile) || has(self.instanceRequirements)
            - message: instanceProfile and instanceRequirements are mutually exclusive
              rule: '!(has(self.instanceProfile) && has(self.instanceRequirements))'
            - message: iksClusterID is required when bootstrapMode is 'iks-api'
              rule: self.bootstrapMode != 'iks-api' || has(self.iksClusterID)
            - message: zone must be within the specified region
              rule: self.region.startsWith(self.zone.split('-')[0] + '-' + self.zone.split('-')[1])
                || self.zone == ''
            - message: vpc must be a valid IBM Cloud VPC ID format
              rule: self.vpc.matches('^r[0-9]{3}-[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$')
            - message: subnet must be a valid IBM Cloud subnet ID format
              rule: self.subnet == '' || self.subnet.matches('^[0-9a-f]{4}-[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$')
            - message: image must contain only lowercase letters, numbers, and hyphens
              rule: self.image.matches('^[a-z0-9-]+$')
          status:
            description: Status defines the observed state of IBMNodeClass
            properties:
              conditions:
                description: Conditions contains signals for health and readiness
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastValidationTime:
                description: LastValidationTime is the last time the nodeclass was
                  validated
                format: date-time
                type: string
              selectedInstanceTypes:
                description: |-
                  SelectedInstanceTypes contains the list of instance types that meet the requirements
                  Only populated when using automatic instance type selection
                items:
                  type: string
                type: array
              selectedSubnets:
                description: |-
                  SelectedSubnets contains the list of subnets selected for node placement
                  Only populated when using automatic subnet selection
                items:
                  type: string
                type: array
              validationError:
                description: ValidationError contains the error message from the last
                  validation
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
