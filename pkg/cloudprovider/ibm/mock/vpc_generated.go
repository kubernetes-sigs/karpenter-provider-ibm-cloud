// Code generated by MockGen. DO NOT EDIT.
// Source: ./vpc.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	core "github.com/IBM/go-sdk-core/v5/core"
	vpcv1 "github.com/IBM/vpc-go-sdk/vpcv1"
	gomock "github.com/golang/mock/gomock"
)

// MockvpcClientInterface is a mock of vpcClientInterface interface.
type MockvpcClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockvpcClientInterfaceMockRecorder
}

// MockvpcClientInterfaceMockRecorder is the mock recorder for MockvpcClientInterface.
type MockvpcClientInterfaceMockRecorder struct {
	mock *MockvpcClientInterface
}

// NewMockvpcClientInterface creates a new mock instance.
func NewMockvpcClientInterface(ctrl *gomock.Controller) *MockvpcClientInterface {
	mock := &MockvpcClientInterface{ctrl: ctrl}
	mock.recorder = &MockvpcClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockvpcClientInterface) EXPECT() *MockvpcClientInterfaceMockRecorder {
	return m.recorder
}

// CreateInstanceWithContext mocks base method.
func (m *MockvpcClientInterface) CreateInstanceWithContext(arg0 context.Context, arg1 *vpcv1.CreateInstanceOptions) (*vpcv1.Instance, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInstanceWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.Instance)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CreateInstanceWithContext indicates an expected call of CreateInstanceWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) CreateInstanceWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInstanceWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).CreateInstanceWithContext), arg0, arg1)
}

// CreateLoadBalancerPoolMemberWithContext mocks base method.
func (m *MockvpcClientInterface) CreateLoadBalancerPoolMemberWithContext(arg0 context.Context, arg1 *vpcv1.CreateLoadBalancerPoolMemberOptions) (*vpcv1.LoadBalancerPoolMember, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLoadBalancerPoolMemberWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.LoadBalancerPoolMember)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CreateLoadBalancerPoolMemberWithContext indicates an expected call of CreateLoadBalancerPoolMemberWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) CreateLoadBalancerPoolMemberWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLoadBalancerPoolMemberWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).CreateLoadBalancerPoolMemberWithContext), arg0, arg1)
}

// DeleteInstanceWithContext mocks base method.
func (m *MockvpcClientInterface) DeleteInstanceWithContext(arg0 context.Context, arg1 *vpcv1.DeleteInstanceOptions) (*core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteInstanceWithContext", arg0, arg1)
	ret0, _ := ret[0].(*core.DetailedResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteInstanceWithContext indicates an expected call of DeleteInstanceWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) DeleteInstanceWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteInstanceWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).DeleteInstanceWithContext), arg0, arg1)
}

// DeleteLoadBalancerPoolMemberWithContext mocks base method.
func (m *MockvpcClientInterface) DeleteLoadBalancerPoolMemberWithContext(arg0 context.Context, arg1 *vpcv1.DeleteLoadBalancerPoolMemberOptions) (*core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteLoadBalancerPoolMemberWithContext", arg0, arg1)
	ret0, _ := ret[0].(*core.DetailedResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteLoadBalancerPoolMemberWithContext indicates an expected call of DeleteLoadBalancerPoolMemberWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) DeleteLoadBalancerPoolMemberWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteLoadBalancerPoolMemberWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).DeleteLoadBalancerPoolMemberWithContext), arg0, arg1)
}

// DeleteVirtualNetworkInterfacesWithContext mocks base method.
func (m *MockvpcClientInterface) DeleteVirtualNetworkInterfacesWithContext(arg0 context.Context, arg1 *vpcv1.DeleteVirtualNetworkInterfacesOptions) (*vpcv1.VirtualNetworkInterface, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteVirtualNetworkInterfacesWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.VirtualNetworkInterface)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// DeleteVirtualNetworkInterfacesWithContext indicates an expected call of DeleteVirtualNetworkInterfacesWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) DeleteVirtualNetworkInterfacesWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteVirtualNetworkInterfacesWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).DeleteVirtualNetworkInterfacesWithContext), arg0, arg1)
}

// DeleteVolumeWithContext mocks base method.
func (m *MockvpcClientInterface) DeleteVolumeWithContext(arg0 context.Context, arg1 *vpcv1.DeleteVolumeOptions) (*core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteVolumeWithContext", arg0, arg1)
	ret0, _ := ret[0].(*core.DetailedResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteVolumeWithContext indicates an expected call of DeleteVolumeWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) DeleteVolumeWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteVolumeWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).DeleteVolumeWithContext), arg0, arg1)
}

// GetImageWithContext mocks base method.
func (m *MockvpcClientInterface) GetImageWithContext(arg0 context.Context, arg1 *vpcv1.GetImageOptions) (*vpcv1.Image, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetImageWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.Image)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetImageWithContext indicates an expected call of GetImageWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) GetImageWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetImageWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).GetImageWithContext), arg0, arg1)
}

// GetInstanceProfileWithContext mocks base method.
func (m *MockvpcClientInterface) GetInstanceProfileWithContext(arg0 context.Context, arg1 *vpcv1.GetInstanceProfileOptions) (*vpcv1.InstanceProfile, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstanceProfileWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.InstanceProfile)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetInstanceProfileWithContext indicates an expected call of GetInstanceProfileWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) GetInstanceProfileWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstanceProfileWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).GetInstanceProfileWithContext), arg0, arg1)
}

// GetInstanceWithContext mocks base method.
func (m *MockvpcClientInterface) GetInstanceWithContext(arg0 context.Context, arg1 *vpcv1.GetInstanceOptions) (*vpcv1.Instance, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstanceWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.Instance)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetInstanceWithContext indicates an expected call of GetInstanceWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) GetInstanceWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstanceWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).GetInstanceWithContext), arg0, arg1)
}

// GetKeyWithContext mocks base method.
func (m *MockvpcClientInterface) GetKeyWithContext(arg0 context.Context, arg1 *vpcv1.GetKeyOptions) (*vpcv1.Key, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKeyWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.Key)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetKeyWithContext indicates an expected call of GetKeyWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) GetKeyWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKeyWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).GetKeyWithContext), arg0, arg1)
}

// GetLoadBalancerPoolMemberWithContext mocks base method.
func (m *MockvpcClientInterface) GetLoadBalancerPoolMemberWithContext(arg0 context.Context, arg1 *vpcv1.GetLoadBalancerPoolMemberOptions) (*vpcv1.LoadBalancerPoolMember, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoadBalancerPoolMemberWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.LoadBalancerPoolMember)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetLoadBalancerPoolMemberWithContext indicates an expected call of GetLoadBalancerPoolMemberWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) GetLoadBalancerPoolMemberWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoadBalancerPoolMemberWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).GetLoadBalancerPoolMemberWithContext), arg0, arg1)
}

// GetLoadBalancerPoolWithContext mocks base method.
func (m *MockvpcClientInterface) GetLoadBalancerPoolWithContext(arg0 context.Context, arg1 *vpcv1.GetLoadBalancerPoolOptions) (*vpcv1.LoadBalancerPool, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoadBalancerPoolWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.LoadBalancerPool)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetLoadBalancerPoolWithContext indicates an expected call of GetLoadBalancerPoolWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) GetLoadBalancerPoolWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoadBalancerPoolWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).GetLoadBalancerPoolWithContext), arg0, arg1)
}

// GetLoadBalancerWithContext mocks base method.
func (m *MockvpcClientInterface) GetLoadBalancerWithContext(arg0 context.Context, arg1 *vpcv1.GetLoadBalancerOptions) (*vpcv1.LoadBalancer, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLoadBalancerWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.LoadBalancer)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetLoadBalancerWithContext indicates an expected call of GetLoadBalancerWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) GetLoadBalancerWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLoadBalancerWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).GetLoadBalancerWithContext), arg0, arg1)
}

// GetSecurityGroupWithContext mocks base method.
func (m *MockvpcClientInterface) GetSecurityGroupWithContext(arg0 context.Context, arg1 *vpcv1.GetSecurityGroupOptions) (*vpcv1.SecurityGroup, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecurityGroupWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.SecurityGroup)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetSecurityGroupWithContext indicates an expected call of GetSecurityGroupWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) GetSecurityGroupWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecurityGroupWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).GetSecurityGroupWithContext), arg0, arg1)
}

// GetSubnetWithContext mocks base method.
func (m *MockvpcClientInterface) GetSubnetWithContext(arg0 context.Context, arg1 *vpcv1.GetSubnetOptions) (*vpcv1.Subnet, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSubnetWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.Subnet)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetSubnetWithContext indicates an expected call of GetSubnetWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) GetSubnetWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSubnetWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).GetSubnetWithContext), arg0, arg1)
}

// GetVPCWithContext mocks base method.
func (m *MockvpcClientInterface) GetVPCWithContext(arg0 context.Context, arg1 *vpcv1.GetVPCOptions) (*vpcv1.VPC, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVPCWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.VPC)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetVPCWithContext indicates an expected call of GetVPCWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) GetVPCWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVPCWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).GetVPCWithContext), arg0, arg1)
}

// ListImagesWithContext mocks base method.
func (m *MockvpcClientInterface) ListImagesWithContext(arg0 context.Context, arg1 *vpcv1.ListImagesOptions) (*vpcv1.ImageCollection, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListImagesWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.ImageCollection)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListImagesWithContext indicates an expected call of ListImagesWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) ListImagesWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListImagesWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).ListImagesWithContext), arg0, arg1)
}

// ListInstanceProfilesWithContext mocks base method.
func (m *MockvpcClientInterface) ListInstanceProfilesWithContext(arg0 context.Context, arg1 *vpcv1.ListInstanceProfilesOptions) (*vpcv1.InstanceProfileCollection, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListInstanceProfilesWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.InstanceProfileCollection)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListInstanceProfilesWithContext indicates an expected call of ListInstanceProfilesWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) ListInstanceProfilesWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListInstanceProfilesWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).ListInstanceProfilesWithContext), arg0, arg1)
}

// ListInstancesWithContext mocks base method.
func (m *MockvpcClientInterface) ListInstancesWithContext(arg0 context.Context, arg1 *vpcv1.ListInstancesOptions) (*vpcv1.InstanceCollection, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListInstancesWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.InstanceCollection)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListInstancesWithContext indicates an expected call of ListInstancesWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) ListInstancesWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListInstancesWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).ListInstancesWithContext), arg0, arg1)
}

// ListLoadBalancerPoolMembersWithContext mocks base method.
func (m *MockvpcClientInterface) ListLoadBalancerPoolMembersWithContext(arg0 context.Context, arg1 *vpcv1.ListLoadBalancerPoolMembersOptions) (*vpcv1.LoadBalancerPoolMemberCollection, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListLoadBalancerPoolMembersWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.LoadBalancerPoolMemberCollection)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListLoadBalancerPoolMembersWithContext indicates an expected call of ListLoadBalancerPoolMembersWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) ListLoadBalancerPoolMembersWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListLoadBalancerPoolMembersWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).ListLoadBalancerPoolMembersWithContext), arg0, arg1)
}

// ListLoadBalancerPoolsWithContext mocks base method.
func (m *MockvpcClientInterface) ListLoadBalancerPoolsWithContext(arg0 context.Context, arg1 *vpcv1.ListLoadBalancerPoolsOptions) (*vpcv1.LoadBalancerPoolCollection, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListLoadBalancerPoolsWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.LoadBalancerPoolCollection)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListLoadBalancerPoolsWithContext indicates an expected call of ListLoadBalancerPoolsWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) ListLoadBalancerPoolsWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListLoadBalancerPoolsWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).ListLoadBalancerPoolsWithContext), arg0, arg1)
}

// ListRegionZonesWithContext mocks base method.
func (m *MockvpcClientInterface) ListRegionZonesWithContext(arg0 context.Context, arg1 *vpcv1.ListRegionZonesOptions) (*vpcv1.ZoneCollection, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRegionZonesWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.ZoneCollection)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListRegionZonesWithContext indicates an expected call of ListRegionZonesWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) ListRegionZonesWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRegionZonesWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).ListRegionZonesWithContext), arg0, arg1)
}

// ListRegions mocks base method.
func (m *MockvpcClientInterface) ListRegions(arg0 *vpcv1.ListRegionsOptions) (*vpcv1.RegionCollection, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRegions", arg0)
	ret0, _ := ret[0].(*vpcv1.RegionCollection)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListRegions indicates an expected call of ListRegions.
func (mr *MockvpcClientInterfaceMockRecorder) ListRegions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRegions", reflect.TypeOf((*MockvpcClientInterface)(nil).ListRegions), arg0)
}

// ListSecurityGroupsWithContext mocks base method.
func (m *MockvpcClientInterface) ListSecurityGroupsWithContext(arg0 context.Context, arg1 *vpcv1.ListSecurityGroupsOptions) (*vpcv1.SecurityGroupCollection, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSecurityGroupsWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.SecurityGroupCollection)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListSecurityGroupsWithContext indicates an expected call of ListSecurityGroupsWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) ListSecurityGroupsWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSecurityGroupsWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).ListSecurityGroupsWithContext), arg0, arg1)
}

// ListSubnetsWithContext mocks base method.
func (m *MockvpcClientInterface) ListSubnetsWithContext(arg0 context.Context, arg1 *vpcv1.ListSubnetsOptions) (*vpcv1.SubnetCollection, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSubnetsWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.SubnetCollection)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListSubnetsWithContext indicates an expected call of ListSubnetsWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) ListSubnetsWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSubnetsWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).ListSubnetsWithContext), arg0, arg1)
}

// ListVirtualNetworkInterfacesWithContext mocks base method.
func (m *MockvpcClientInterface) ListVirtualNetworkInterfacesWithContext(arg0 context.Context, arg1 *vpcv1.ListVirtualNetworkInterfacesOptions) (*vpcv1.VirtualNetworkInterfaceCollection, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListVirtualNetworkInterfacesWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.VirtualNetworkInterfaceCollection)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListVirtualNetworkInterfacesWithContext indicates an expected call of ListVirtualNetworkInterfacesWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) ListVirtualNetworkInterfacesWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListVirtualNetworkInterfacesWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).ListVirtualNetworkInterfacesWithContext), arg0, arg1)
}

// ListVolumesWithContext mocks base method.
func (m *MockvpcClientInterface) ListVolumesWithContext(arg0 context.Context, arg1 *vpcv1.ListVolumesOptions) (*vpcv1.VolumeCollection, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListVolumesWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.VolumeCollection)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListVolumesWithContext indicates an expected call of ListVolumesWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) ListVolumesWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListVolumesWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).ListVolumesWithContext), arg0, arg1)
}

// UpdateInstanceWithContext mocks base method.
func (m *MockvpcClientInterface) UpdateInstanceWithContext(arg0 context.Context, arg1 *vpcv1.UpdateInstanceOptions) (*vpcv1.Instance, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateInstanceWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.Instance)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// UpdateInstanceWithContext indicates an expected call of UpdateInstanceWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) UpdateInstanceWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateInstanceWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).UpdateInstanceWithContext), arg0, arg1)
}

// UpdateLoadBalancerPoolMemberWithContext mocks base method.
func (m *MockvpcClientInterface) UpdateLoadBalancerPoolMemberWithContext(arg0 context.Context, arg1 *vpcv1.UpdateLoadBalancerPoolMemberOptions) (*vpcv1.LoadBalancerPoolMember, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateLoadBalancerPoolMemberWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.LoadBalancerPoolMember)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// UpdateLoadBalancerPoolMemberWithContext indicates an expected call of UpdateLoadBalancerPoolMemberWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) UpdateLoadBalancerPoolMemberWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateLoadBalancerPoolMemberWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).UpdateLoadBalancerPoolMemberWithContext), arg0, arg1)
}

// UpdateLoadBalancerPoolWithContext mocks base method.
func (m *MockvpcClientInterface) UpdateLoadBalancerPoolWithContext(arg0 context.Context, arg1 *vpcv1.UpdateLoadBalancerPoolOptions) (*vpcv1.LoadBalancerPool, *core.DetailedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateLoadBalancerPoolWithContext", arg0, arg1)
	ret0, _ := ret[0].(*vpcv1.LoadBalancerPool)
	ret1, _ := ret[1].(*core.DetailedResponse)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// UpdateLoadBalancerPoolWithContext indicates an expected call of UpdateLoadBalancerPoolWithContext.
func (mr *MockvpcClientInterfaceMockRecorder) UpdateLoadBalancerPoolWithContext(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateLoadBalancerPoolWithContext", reflect.TypeOf((*MockvpcClientInterface)(nil).UpdateLoadBalancerPoolWithContext), arg0, arg1)
}
